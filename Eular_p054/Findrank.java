public class Findrank
{
	int rank;
	public Findrank(char c[][])
	{
		if( (c[1][1]==c[0][1]) && (c[2][1]==c[0][1]) && (c[3][1]==c[0][1]) && (c[4][1]==c[0][1]) )   //flush field
		{
			if( (c[0][0]=='i') && (c[1][0]=='j') && (c[2][0]=='k') && (c[3][0]=='l') && (c[4][0]=='m') )
				rank =10;

			else if( (c[1][0]==c[0][0]+1) && (c[2][0]==c[0][0]+2) && (c[3][0]==c[0][0]+3) && (c[4][0]==c[0][0]+4) )
				rank= 9;

			else rank= 6;
		}

		else if(  ((c[0][0]==c[2][0]) && (c[1][0]==c[2][0]) && (c[3][0]==c[2][0]))  ||  ((c[1][0]==c[2][0]) && (c[3][0]==c[2][0]) && (c[4][0]==c[2][0]))  )		//four of a kind
			rank= 8;

		else if(  ((c[0][0]==c[2][0]) && (c[1][0]==c[2][0]) && (c[3][0]==c[4][0]))  ||  ((c[0][0]==c[1][0]) && (c[3][0]==c[2][0]) && (c[4][0]==c[2][0]))  ) 		//full house
			rank= 7;

		else if( (c[1][0]==c[0][0]+1) && (c[2][0]==c[0][0]+2) && (c[3][0]==c[0][0]+3) && (c[4][0]==c[0][0]+4) ) //straight 
			rank= 5;

		else if(  ((c[0][0]==c[2][0]) && (c[1][0]==c[2][0])) ||  ((c[1][0]==c[2][0]) && (c[3][0]==c[2][0])) ||  ((c[3][0]==c[2][0]) && (c[4][0]==c[2][0])) )		//three of a kind
			rank= 4;
		else if( (c[0][0]==c[1][0]) || (c[1][0]==c[2][0]) || (c[2][0]==c[3][0]) || (c[3][0]==c[4][0]) ) //pairs
		{ 
			int i, count=0;
			for(i=0;i<4;i++)
			{
				if(c[i][0]==c[i+1][0]) 
					count++;
			}
			if(count==2)
				rank= 3; //for 2 set of pairs
			else rank= 2; // for one set of  pair

		}
		else rank= 1;
	}
}
